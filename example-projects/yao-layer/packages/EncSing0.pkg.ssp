package EncSing0 {
    params {
        n: Integer,
        m: Integer,
        p: Integer,
        encn: fn Bits(n),Bits(n),Bits(n) -> Bits(m),
        encm: fn Bits(n),Bits(m),Bits(n) -> Bits(p),
    }

    state {
    }

    import oracles {
        GETKEYSIN() -> Table(Bool, Bits(n)),
    }


    oracle ENCN(d: Bool, nzero: Bits(n), none: Bits(n)) -> Bits(m) {
        K <- invoke GETKEYSIN();
        r <-$ Bits(n);
        c <- encn(Unwrap(K[d]), nzero, r);
        return c;
    }

    oracle ENCM(d: Bool, mzero: Bits(m), mone: Bits(m)) -> Bits(p) {
        K <- invoke GETKEYSIN();
        r <-$ Bits(n);
        c <- encm(Unwrap(K[d]), mzero, r);
        return c;
    }
}

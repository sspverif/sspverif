composition Indcpa0 {
    const n: Integer;
    const m: Integer;
    const p: Integer;
    const zeron: Bits(n);
    const zerom: Bits(m);
    const encn: fn Bits(n),Bits(n),Bits(n) -> Bits(m);
    const encm: fn Bits(n),Bits(m),Bits(n) -> Bits(p);

    instance keys_top = GenericKeys {
        params {
            n: n,
        }

    }

    instance enc = Enc0 {
        params {
            n: n,
            m: m,
            p: p,
            encn: encn,
            encm: encm,
        }

    }
    compose {
        adversary: {
            GETAOUT: keys_top,
            SETBIT: keys_top,
            ENCN: enc,
            ENCM: enc,
        }
        enc: {
            GETKEYSIN: keys_top,
        }
    }
}

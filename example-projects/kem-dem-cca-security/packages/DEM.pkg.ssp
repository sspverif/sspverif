package DEM {
    params {
        b: Bool,
        len: fn Bits(*) -> Integer,
        zeros: fn Integer -> Bits(*),
    }

    state {
        T: Table(Bits(*), Bool)
    }

    import oracles {
        GET() -> Bits(256),
        DEM_ENC(k: Bits(256), m: Bits(*)) -> Bits(*),
        DEM_DEC(k: Bits(256), c: Bits(*)) -> Bits(*),
    }

    oracle ENC(m: Bits(*)) -> Bits(*) {
        k <- invoke GET();
        if b {
            c <- invoke DEM_ENC(k, zeros(len(m)));
            
        } else {
            c <- invoke DEM_ENC(k, m);
        }
        T[c] <- Some(true);
        return c;
    }

    oracle DEC(c: Bits(*)) -> Bits(*) {
        if (T[c] != None as Bool) {
            abort;
        }
        k <- invoke GET();
        m <- invoke DEM_DEC(k, c);
        return m;
    }
}